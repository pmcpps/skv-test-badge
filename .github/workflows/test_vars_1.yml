name: Test Vars 1
on:
  workflow_dispatch:
  
env:
  RACK_ENV: stage
  ENV_FILE: .env.stage

jobs:
  vars:
    runs-on: ubuntu-latest 
    outputs:
      RACK_ENV: ${{ steps.extract_variables.outputs.RACK_ENV }}
      ENV_FILE: ${{ steps.extract_variables.outputs.ENV_FILE }}
      REPOSITORY: ${{ steps.extract_variables.outputs.REPOSITORY }}
      BRANCH: ${{ steps.extract_variables.outputs.BRANCH }}
      TAG: ${{ steps.extract_variables.outputs.TAG }}
      GIT_SHA: ${{ steps.extract_variables.outputs.GIT_SHA }}
      GIT_SHA_SHORT: ${{ steps.extract_variables.outputs.GIT_SHA_SHORT }}
      MESSAGE: ${{ steps.extract_variables.outputs.MESSAGE }}
      LATEST_RELEASE: ${{ steps.extract_variables.outputs.LATEST_RELEASE }}
      SITE_URL: ${{ steps.extract_variables.outputs.SITE_URL }}
      SITE_NAME: ${{ steps.extract_variables.outputs.SITE_NAME }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v3
    - name: Get latest release tag
      uses: oprypin/find-latest-tag@v1
      with:
        repository: ${{ github.repository }}
        releases-only: true 
      id: octokit      
    - name: GET .env
      run: |
        cp ${{ env.ENV_FILE }} .env
    - name: Dotenv action
      uses: falti/dotenv-action@v1.0.4
      id: dotenv   
    - name: Extract variables
      shell: bash
      run: |
        echo "RACK_ENV=${{ env.RACK_ENV }}" >> $GITHUB_OUTPUT
        echo "ENV_FILE=${{ env.ENV_FILE }}" >> $GITHUB_OUTPUT
        echo "REPOSITORY=${{ github.repository }}" >> $GITHUB_OUTPUT
        echo "BRANCH=${{ github.ref_name }}" >> $GITHUB_OUTPUT
        echo "TAG=${{ github.ref_name }}" >> $GITHUB_OUTPUT
        echo "GIT_SHA=${{ github.sha }}" >> $GITHUB_OUTPUT
        echo "GIT_SHA_SHORT=$( git rev-parse --short ${{ github.sha }} )" >> $GITHUB_OUTPUT
        #echo "MESSAGE=${{ github.event.head_commit.message }}" >> $GITHUB_OUTPUT
        echo "-----"
        echo "MESSAGE=$(git log --format=%B -n 1 ${{ github.event.after }})" >> $GITHUB_OUTPUT
        echo "LATEST_RELEASE=${{ steps.octokit.outputs.tag }}" >> $GITHUB_OUTPUT
        echo "SITE_NAME=${{ steps.dotenv.outputs.SITE_NAME }}" >> $GITHUB_OUTPUT
        echo "SITE_URL=${{ steps.dotenv.outputs.SITE_URL }}" >> $GITHUB_OUTPUT
      id: extract_variables  
    - name: Print state
      run: |
        echo "RACK_ENV = ${{ steps.extract_variables.outputs.RACK_ENV }}"
        echo "ENV_FILE = ${{ steps.extract_variables.outputs.ENV_FILE }}"
        echo "REPOSITORY = ${{ steps.extract_variables.outputs.REPOSITORY }}"
        echo "BRANCH = ${{ steps.extract_variables.outputs.BRANCH }}"
        echo "GIT_SHA = ${{ steps.extract_variables.outputs.GIT_SHA }}"
        echo "MESSAGE = ${{ steps.extract_variables.outputs.MESSAGE }}"

  #build:
  #  needs: [vars]
  #  uses: ./.github/workflows/_build.yml
  #  with:
  #    RACK_ENV: ${{ needs.vars.outputs.RACK_ENV }}
  #    ENV_FILE: ${{ needs.vars.outputs.ENV_FILE }}
  #    REPOSITORY: ${{ needs.vars.outputs.REPOSITORY }}
  #    BRANCH: ${{ needs.vars.outputs.BRANCH }}
  #    GIT_SHA: ${{ needs.vars.outputs.GIT_SHA }}
