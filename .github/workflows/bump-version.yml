name: Bump Version
on:
  workflow_dispatch:
  
  release:
    types: [published]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  bump:
    runs-on: ubuntu-latest
    steps:
    
    # GET BRANCH NAME:
    - name: Set package.json version
      run: |
        echo "### CURRENT BRANCH NAME:  ${{ github.ref_name }}."

    # https://github.com/marketplace/actions/find-latest-tag
    - uses: oprypin/find-latest-tag@v1
      with:
        repository: pmcpps/skv-test-badge  # The repository to scan.
        releases-only: true  # We know that all relevant tags have a GitHub release for them.
      id: octokit  # The step ID to refer to later.

    - run: |
        echo "### CURRENT BRANCH NAME:  ${{ github.ref_name }}."
        echo "### LATEST RELEASE TAG:  ${{ steps.octokit.outputs.tag }}."

    - run: echo "Octokit is at version ${{ steps.octokit.outputs.tag }}"
    
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: '0'
    - name: Git commands
      run: |
        # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
        git --version
        git config user.name "GitHub Actions Bot"
        git config user.email "<>"
        git status
        git tag
        git describe
        echo "-------------------------"
        git rev-list --tags --max-count=1
        git rev-list --tags --max-count=1 | git describe --tags
        git tag --sort=committerdate | grep -E '^[0-9]' | tail -1
        
    # https://stackoverflow.com/questions/58177786/get-the-current-pushed-tag-in-github-actions
    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Test
      run: |
        echo $RELEASE_VERSION
        echo ${{ env.RELEASE_VERSION }}
    
    - name: "Setup Node"
      uses: actions/setup-node@v3
      with:
        node-version: '14'
        
    - name: "Retrieve version"
      id: version
      run: |
        echo "TAG_NAME=$(git tag | sort -V | tail -1)" >> $GITHUB_OUTPUT
        
    - name: Print Release
      id: print_release
      run: |
        echo "RELEASE TAG IS: ${{ steps.version.outputs.TAG_NAME }}"

    - name: "call action"
      id: last_release
      uses: InsonusK/get-latest-release@v1.0.1
      with:
        myToken: ${{ github.token }}
        exclude_types: ""
        view_top: 1
    - name: "Print result"
      run: |
        echo "id: ${{ steps.last_release.outputs.id }}"
        echo "name: ${{ steps.last_release.outputs.name }}"
        echo "tag_name: ${{ steps.last_release.outputs.tag_name }}"
        echo "created_at: ${{ steps.last_release.outputs.created_at }}"
        echo "draft: ${{ steps.last_release.outputs.draft }}"
        echo "prerelease: ${{ steps.last_release.outputs.prerelease }}"         
        echo "release: ${{ steps.last_release.outputs.release }}"   
        echo "---------------------------------------"
        echo "GIT_TAG=`echo $(git describe --tags --abbrev=0)`" >> $GITHUB_ENV
        echo "---------------------------------------"
        echo "LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)" >> $GITHUB_OUTPUT

    - name: Set package.json version
      run: |
        echo "### Package version bumped to:  ${{ github.ref_name }}."

    - name: Success Summary
      if: ${{ success() }}
      run: |
        echo "### Package version bumped to:  ${{ github.ref_name }}.  Release tag created."

    - name: Failure Summary
      if: ${{ failure() }}
      run: |
        echo "### Unable to bump version/release tag to:  $${{ github.event.release.tag_name }}."
