name: Release
on:
  release:
    types: [published]

jobs:
  version-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Version Check Instructions
        run: |
          MY_STRING=$(cat << EOF

          If version checking fails, you must do one of the following
            1) Manually invoke the 'bump' github workflow to set the package.version to the desired release tag value
            2) Edit package.json to set the version field to the release tag, and then commit that change.
          If version checking passes, you will see "OK! VERSION CHECK SUCCEEDED!!!"
          EOF
          )
          echo "::set-output name=content::$MY_STRING"

      - name: match-tag-to-package-version
        id: match-tag-to-package-version
        uses: geritol/match-tag-to-package-version@0.2.0
        if: always()

      - name: Version Check Results
        run: |
          MY_STRING=$(cat << EOF

            OK! VERSION CHECK SUCCEEDED!!!
          EOF
          )
          echo "::set-output name=content::$MY_STRING"

  test:
    name: Build and Test
    needs: [version-check]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: Install Dependencies
        run:  |
          yarn install

      - name: Run Test Suite
        run: |
          yarn test:unit tests/

      - name: Test Package Build
        run: |
          yarn build --target wc --name data-metrics-badge 'src/components/DataMetricsBadge.vue'

#   publish:
#     name: Release
#     needs: [test]
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-node@v2
#         with:
#           node-version: '12'
#
#       - name: Install Dependencies
#         run: |
#           yarn install
#
#       - name: Build Package
#         run: |
#           yarn build --target wc --name data-metrics-badge 'src/components/DataMetricsBadge.vue'

      # - name: Set version
      #   run: |
      #     git config --local user.email "action@github.com"
      #     git config --local user.name "GitHub Action"
      #
      #     npm version ${{ github.event.release.tag_name }}
      #
      #     git remote add gh-origin https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
      #     git push gh-origin HEAD:master --tags

#       - name: Publish
#         run: |
#           npm set //registry.npmjs.org/:_authToken $NODE_AUTH_TOKEN
#           npm publish

        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
