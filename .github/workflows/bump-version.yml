name: Bump Version
on:
  workflow_dispatch:
  
  release:
    types: [published]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  RACK_ENV: stage
  ENV_FILE: .env.stage

jobs:
  bump:
    runs-on: ubuntu-latest
    steps:
    - name: Git checkout
      uses: actions/checkout@v3

    - name: Get latest release tag
      uses: oprypin/find-latest-tag@v1
      with:
        repository: ${{ github.repository }}
        releases-only: true 
      id: octokit
      
    - name: GET .env
      run: |
        cp ${{ env.ENV_FILE }} .env
        
    - name: Dotenv action
      uses: falti/dotenv-action@v1.0.4
      id: dotenv   
      
    - name: Extract variables
      shell: bash
      run: |
        echo "REPOSITORY=${{ github.repository }}" >> $GITHUB_ENV
        echo "LATEST_RELEASE=${{ steps.octokit.outputs.tag }}" >> GITHUB_ENV
        echo "BRANCH=${{ github.ref_name }}" >> $GITHUB_OUTPUT
        echo "TAG=${{ github.ref_name }}" >> $GITHUB_ENV
        echo "GIT_SHA=${{ github.sha }}" >> $GITHUB_ENV
        echo "GIT_SHA_SHORT=$( git rev-parse --short ${{ github.sha }} )" >> $GITHUB_ENV
        echo "MESSAGE=$(git log --format=%B -n 1 ${{ github.event.after }})" >> $GITHUB_ENV
        echo "SITE_NAME=${{ steps.dotenv.outputs.SITE_NAME }}" >> $GITHUB_ENV
        echo "SITE_URL=${{ steps.dotenv.outputs.SITE_URL }}" >> $GITHUB_ENV
      id: extract_variables   
        # echo "BRANCH=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')" >> $GITHUB_OUTPUT
        # echo "BRANCH=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')" >> $GITHUB_OUTPUT
        # echo "TAG=$(git tag --points-at HEAD)" >> $GITHUB_OUTPUT
        # echo "GIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        # echo "GIT_SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        # echo "MESSAGE=$(git log --format=%B -n 1 ${{ github.event.after }})" >> $GITHUB_OUTPUT
      # id: extract_variables     
      
    - name: Print variables
      run: |
        echo "REPOSITORY = ${{ env.REPOSITORY }}"
        ecno "RELEASE = ${{ env.LATEST_RELEASE }}"
        echo "BRANCH = ${{ steps.extract_variables.outputs.BRANCH }}"
        echo "TAG = ${{ env.TAG }}"
        echo "GIT_SHA = ${{ env.GIT_SHA }}"
        echo "GIT_SHA_SHORT = ${{ env.GIT_SHA_SHORT }}"
        echo "MESSAGE = ${{ env.MESSAGE }}"
        echo "SITE_NAME = ${{ env.SITE_NAME }}"
        echo "SITE_URL = ${{ env.SITE_URL }}"

        # echo ${{ steps.extract_variables.outputs.BRANCH }}
        # echo ${{ steps.extract_variables.outputs.TAG }}
        # echo ${{ steps.extract_variables.outputs.GIT_SHA }}
        # echo ${{ steps.extract_variables.outputs.GIT_SHA_SHORT }}
        # echo ${{ steps.extract_variables.outputs.MESSAGE }}
