name: Cached
on:
  workflow_call:
    inputs:
      rack_env:
        required: true  
        type: string
      env_file:
        required: true
        type: string
    secrets:
      my_token:
        description: 'The site token.'
        required: true
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      S3_BUCKET: ${{ secrets.S3_BUCKET }}
      S3_REGION: ${{ secrets.S3_BUCKET_REGION }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: print basic info in cached.yml
        run: |
          echo "ENV_FILE: ${{ inputs.env_file }}"
          echo "RACK_ENV: ${{ inputs.rack_env }}"
      - name: check token
        run: |
          echo "got here!! - ${{ secrets.my_token }}"   
      #- name: check token 2
      #  if: ${{ secrets.my_token !== "stage" }}
      #  run: |
      #    echo "got here!! - stage"
      - name: check input
        if: inputs.rack_env == 'stage'
        run: |
          echo "got here!! - stage"
      - name: test the environment
        if: true
        run: |
          echo "IT WORKED OUT!"
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get cached build
        uses: actions/cache@v3
        with:
          path: build
          key: assets-build-${{ github.sha }}
          restore-keys: |
            assets-build-${{ github.sha }}
          #key: ${{ runner.os }}-build-${{ github.sha }}
          #restore-keys: |
          #  ${{ runner.os }}-buildx-${{ github.sha }}
          
      - name: deploy to s3
        uses: reggionick/s3-deploy@v3.2.0
        with:
          folder: build
          bucket: ${{ secrets.S3_BUCKET }}
          bucket-region: ${{ secrets.S3_REGION }}
          #dist-id: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
          invalidation: /
          delete-removed: false

